:root{
    --color-primary:#2584ff;
    --color-secondary:#00d9ff;
    --color-accent:#ff3400;
    --color-headings:#1b0760;
    --color-body:#918ca4;
    --color-body-darker:#5c5577;
}

*,*::after,*::before{
    box-sizing: border-box;
    /* gives the actual size of the element despite padding or border */
}

/* Typography */

html{
    /* 62.5% x 16px =10px */
    font-size: 62.5%;
}
body{
    font-family: Inter,Arial, Helvetica, sans-serif;
    color: var(--color-body);
    font-size: 2.4rem;
}
h1,h2,h3{
    color: var(--color-headings);
    margin-bottom: 1rem;
    line-height: 1.1;
} 
h1{
    font-size: 7rem;
}
h2{
    font-size: 4rem;
}
h3{
    font-size: 3rem;
   
}
p{
    margin-top: 0;
}

@media screen and (min-width:1024px){
    body{
        font-size: 1.8rem;
    }
    h1{
        font-size:8rem ;
    }
    h2{
        font-size: 4rem;
    }
    h3{
        font-size: 2.4rem;
    }
}

/* Links */

a{
    text-decoration: none;
}
.link-arrow{
    color: var(--color-accent);
    transition: margin 0.15s;
    font-weight: bold;
}
.link-arrow::after{
    content: '-->';
    margin-left:5px;
}
.link-arrow:hover::after{
margin-left: 10px;
}

@media screen and (min-width:1024px){
    .link-arrow{
        font-size: 1.4rem;
    }
}

/* Badges */

.badge{
border-radius: 20px;
font-size: 2rem;
font-weight: 600;
padding: 0.5rem 2rem;
white-space: nowrap;

}

.badge--primary{
    background: var(--color-primary);
    color: #fff;
}
.badge--secondary{
    background: var(--color-secondary);
    color: #fff;
}
.badge--small{
    font-size: 1.6rem;
}

@media screen and (min-width:1024px) {
    .badge{
        font-size: 1.5rem;
    }
    .badge--small{
        font-size: 1.2rem;
    }
}

/* Lists */
.list{
    list-style: none;
    color: var(--color-headings);
    padding-left: 0;
}

.list--inline .list__item{
    display: inline-block;  
    /* we put inline block so we can be able to apply margin, which is impossible for "inline" display */
    margin-right: 2rem;
}

.list--tick{
    /* don't forget (../images/.....) */
    list-style-image: url(../images/tick.svg);
    padding-left: 3rem;
}
 .list--tick .list__item{
    padding-left: 0.5rem;
    margin-bottom: 1rem;
 }

 @media screen and (min-width:1024px) {
    .list--tick .list__item{
        padding-left: 0;
    }
 }

/* Icons */
.icon{
    width: 40px;
    height: 40px;
}
.icon--primary{
    fill: var(--color-primary);
}

.icon--white{
    fill: #fff;
    /* for testimonial */
}

.icon--small{
    width: 30px;
    height: 30px;
     /* for testimonial */
}
.icon-container{
    background: #f3f9fa;
    width: 64px;
    height: 64px;
    display: inline-flex;
    /* inline flex helps put the icon in the centre and gives the round shape(also 100% border radius gives round shape) */
    border-radius: 100%;
    justify-content: center;
    align-items: center;
}

.icon-container--accent{
    background: var(--color-accent);
    /* for testimonial icon */
}

/* Buttons */
.btn{
 font-size: 1.8rem;
 font-weight: 600;
 /* PS:600 not equal to 600px*/
 padding: 2rem 3rem;
 text-transform: uppercase;
 border: 0;
 /* border:0 removes the default border */
 border-radius: 40px;
 cursor: pointer;
 /* added pointer as the cursor when we hover on the button */
 white-space: nowrap;
 /* text shouldn"t go to next line if space is not enough */
 text-align: center;
 margin: 1rem 0;
 /* margin to separate btn from other elements */
}

.btn--primary{
    background: var(--color-primary);
    color: #fff;
}

.btn--primary:hover{
    background: #3a8ffd
}

.btn--secondary{
    background: var(--color-secondary);
    color: #fff;
}
.btn--secondary:hover{
    background: #00c8eb;
}
.btn--accent{
    background: var(--color-accent);
    color: #fff;
}
.btn--accent:hover{
    background: #ec3000;
}
.btn--outline{
    background: #fff;
    color: var(--color-headings);
    border: 2px solid var(--color-headings);
}

.btn--outline:hover{
 background: var(--color-headings);
 color: #fff;
}

.btn--block{
    width: 100%;
    display: inline-block;
    /* coz by default is inline for <a> so we wouldn't be able to apply width */
}

.btn--stretched{
    padding-left: 6rem;
    padding-right: 6rem;
    /* This is used in callouts  */
}
@media screen and (min-width:1024px){
    .btn{
        font-size: 1.5rem;
    } 
}

/* Inputs */
.input{
    padding: 1.5rem 3.5rem;
    border: 1px solid #ccc;
    border-radius: 30px;
    color: var(--color-headings);
    /* color of the text */
    font-size: 2rem;
    outline: 0;
}
::placeholder{
color: #cdcbd7;
}
@media screen and (min-width:1024px){
  .input{
    font-size: 1.5rem;
  }
}
/* Input groups */

.input-group{
    border: 2px solid #ccc;
    border-radius: 30px;
    display: flex;
}

.input-group .input{
    border: 0;
    flex-grow: 1;
    padding: 1.5rem 1rem;
}
.input-group .btn{
    margin: 0.4rem 0.3rem;
}

/* Cards */
.card{
    /* we don't put width so that it can be flexible and adopt size of any container */
    box-shadow: 0 0 20px 10px #f3f3f3;
    border-radius: 7px;
    overflow: hidden;
    /* in adding header color, the header becomes biger than card(overflows), so we hide overflow to resume the round corners of border radius */
}
 .card--testimonial{
    overflow: visible;
    /* for testimonial so that the icon isn't cut off in small screens */
 }
.card-container{
    /* temporary card container */
    width: 50%;
    padding: 4rem;
}
.card__header,
.card__body{
    padding: 2rem 3rem;
}

.card--primary .card__header{
    background: var(--color-primary);
    color: #fff;
}

.card--secondary .card__header{
    background: var(--color-secondary);
    color: #fff;
}

.card--secondary .badge--secondary{
    background: #02cdf1;
    /* This for secondary badges in secondary cards..so that badge can be seen we change it's color */
}

/* Plans */

.plan__name{
    color: #fff;
    font-weight: 500;
    margin: 0;
    font-size: 2.4rem;
}
.plan__price{
    font-size: 6rem;
}

.plan__billing-cycle{
    font-size: 2.4rem;
    font-weight: 300;
    opacity: 0.8;
    /* opacity to make it softer */
    margin-right: 1rem;
}
.plan__description{
    font-size: 2rem;
    font-weight: 300;
    display: block;
    letter-spacing: 0.1rem;
}
.plan .list__item{
    margin-bottom: 2rem;
}

.plan--popular .card__header{
    position: relative;
    /* so that we can position the ::before as absolute to card header */
}

.plan--popular .card__header::before{
    content: url(../images/popular.svg);
    width: 40px;
    display: inline-block;
    /* display inline-block coz it's an inline element. So we wouldn't be able to apply width */
    position: absolute;
    right: 5%;
    /* moves it to te right */
    top:-6%;
    /* moves it to the top */
}
/* for popular card plan, means insert the content before card header */

@media screen and (min-width:1024px){
    .plan__name{
        font-size: 1.4rem;
    }
    .plan__price{
        font-size: 5rem;
    }
    .plan__billing-cycle{
        font-size: 1.6rem;
    }
    .plan__description{
        font-size: 1.7rem;
    }
}

/* Media */
.media{
    display: flex;
}
.media__title{
    margin-top: 0;
}
.media__body{
    margin: 0 2rem;
}

.media__image{
    margin-top: 1rem;
    margin-left: 1rem;
}

/* Quotes */
.quote{
    font-size: 3rem;
    font-style: italic;
    color:var(--color-body-darker);
    line-height: 1.3;
}
.quote__text::before{
    content:open-quote;
    /* it's a predefined value */
}
.quote__text::after{
    content: close-quote;
}

.quote__author{
    font-size: 3rem;
    font-weight: 600;
    font-style: normal;
    margin-bottom: 0;
}
.quote__company{
    font-size: 2rem;
    opacity: 0.4;
    color: var(--color-headings);
    font-style: normal;
}
.quote__line{
    position: relative;
    bottom: 10px;
}

@media screen and (min-width:1024px) {
    .quote{
        font-size: 2rem;
    }
    .quote__author{
        font-size: 2.4rem;
    }
    .quote__company{
        font-size: 1.4rem;
    }
}

/* Grids */
.grid{
    display: grid;
}
.gold{
    background: gold;
}
.blue{
    background: blue;
}
.red{
    background: red;
}
@media screen and (min-width:768px) {
    .grid--1x2{
        grid-template-columns: repeat(2,1fr);
        /* 2 columns each with 1fr */
    }
}

@media screen and (min-width:1024px) {
    .grid--1{
        grid-template-columns: repeat(3,1fr);
        /* 3 columns each with 1fr */
    }
}

/* Testimonials */

.testimonial{
    padding: 3rem;
}
.testimonial__image {
    position: relative;
    /* so we can position the icon absolute */
}

.testimonial__image > .icon-container{
    position: absolute;
    top: 3rem;
    right: -32px;
    /* from icon size of 64px. We divided by 2 to get 32. then right:-32px so tat the icon stays in the middle of the image right edge */

}
.testimonial__image > img{
    width: 100%;
}

@media screen and (min-width:768px) {
    /* for tablets */

}
.testimonial .quote ,
.testimonial .quote__author
{
font-size: 2.4rem;
}

.testimonial .quote{
    margin-left: 6rem;
}

/* Callouts */
.callout{
    padding: 3rem;
    border-radius: 5px;
}
.callout--primary{
    background: var(--color-primary);
    color: white;
}
.callout__content{
    padding: 3rem;
    text-align: center;
}
.callout__heading{
    color: white;
}

.callout .btn{
    justify-self: center;
    align-self: center;
    /* JUSTIFY-SELF is for horizontal alignment of A GRID ITEM(single item), align-self for vertical */
    /* before alignment the button was so big. why??? */
}

@media screen and (min-width:768px){
  
    .callout .grid--1x2{
        grid-template-columns: 1fr auto;
        /* 1fr for content, then auto means that the button will fit the available space..sting like that */
    }
    .callout__content{
        text-align: left;
    }

    .callout .btn{
        justify-self: start;
        /* for wider screens we want the button to be closer to the callout__content */
        margin:0 2rem;
    }
}
/* Collapsibles */
.collapsible__header{
    display: flex;
    justify-content: space-between;
    /* creates space between heading and icon */
    
}
.collapsible__heading{
    margin-top: 0;
    font-size: 3rem;
}

.collapsible__wordpress{
    transform: rotate(-90deg);
    transition: transform 0.3;
}

.collapsible__content{
    /* display: none; */
    max-height: 0;
     /* for animating max-height when expanded */
    /* when max-height's 0, there's overflow. so we hide the overflow as below. */
    opacity: 0;
    /* opacity for creating an animation when we uncollapse it  */
    overflow: hidden;
    transition: all 0.3s
    /* transition for all things should take 0.3s, for here there's  max-height, opacity..when we collapse and uncollapse content */
}

.collapsible--expanded .collapsible__wordpress{
    transform: rotate(0);
    /* the icon shouldn't be rotated when collapsible's expanded */

}
.collapsible--expanded .collapsible__content{
    /* display: block; */
    /* content should display when expanded */
    max-height: 100vh;
    /* if we put height instead of max-height, it would take the entire page */
    opacity: 1;
}

/* Blocks */
.block{
    --padding-vertical:6rem;
    /* we defined a variable of padding-verticalso that we can be able to change ... */
    /* border: 2px solid red; */
    padding: var(--padding-vertical) 2rem;
   
   
}
.block__heading{
    margin-top: 0;
}
.block--dark{
    background-color: #000;
    color: #7b858b;
}
.block--dark .block__heading{
    color: #fff;
}
.block--skewed-right{
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 80%);
    /* got this from clip generator(clippy), in custom polygon */
    /* x% y%, x% y%, ..... , sthing like x y coordinate points*/
   padding-bottom: calc(var(--padding-vertical) + 4rem);
   /* calc() is for adding the padding vertical with 4rem to make 10 rem for te skewed block */
}
.block--skewed-left{
    clip-path: polygon(0% 0%, 100% 0%, 100% 80%, 0% 100%);
    /* got this from clip generator(clippy), in custom polygon */
    /* x% y%, x% y%, ..... , sthing like x y coordinate points*/
   padding-bottom: calc(var(--padding-vertical) + 4rem);
   /* calc() is for adding the padding vertical with 4rem to make 10 rem for te skewed block */
}
.block__header{
    text-align: center;
}
.container{
    max-width: 1140px;
    /* content of this container shouldn't stretch more than 1140px */
    margin: 0 auto;
    /* for horizontal margin, if there's extra space, it will be equally distributed in each side */
}
/* Navigaton bar */
.nav{
    background:#000;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    padding:  0 1rem;
    align-items: center;
    
}
.nav__list{
    width: 100%;
    /* so as to apply flex-wrap on .nav and the list to move to the second line */
}
.nav__item{
    padding: 0.5rem 2rem;
    border-bottom: 1px solid #222;
}
.nav__item > a{
    color: #d2d0db;
    transition: color 0.3s;
}
.nav__item > a:hover{
    color: #fff;
}
.nav__toggler{
    opacity: 0.5;
    transition: box-shadow 0.3s;
    cursor: pointer;
}
.nav.collapsible--expanded .nav__toggler{
    opacity: 1;
    box-shadow: 0 0 0 3px #665;
    border-radius: 5px;
}


@media screen and (min-width:768px) {
    .nav{
        flex-wrap: nowrap;
    }
    .nav__list{
        width: auto;
        display: flex;
        max-height: 100%;
        opacity: 1;
        /* max-height and opacity so as to make the contant visible always coz in collapsible__cotent it was the opposite */
    }
    .nav__toggler{
      display: none;
    }
    .nav__item{
        border: 0;
    }
}
/* Hero */
.hero{
    clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
}
.hero__paragraph{
    font-size: 2rem;
    color: #b9c3cf;
    letter-spacing: 1px;
    margin-top: 2rem;
    margin-bottom: 5rem;
    /* can also be written as 2rem 0 5rem */
}
.hero__image{
    width: 100%;
    /* will take the size of it's parent/container (the 2nd column grid thingy) */
}

@media screen and (min-width:768px) {

    .hero{
        padding-top: 0;
    }

    .hero__content{
        text-align: left;
         /* block__header class was used to align text in center for the mobile approach(was put in index.html) */
        align-self: center;
        /* used align self coz hero__content is one of the elements in the grid, the other is the image */
    }
   
}